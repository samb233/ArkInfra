// TODO: 学习谷歌api设计规范，重新定义一下api与命名
// TODO: 为什么要有UserID？不放在元数据里吗？寻找微服务间调用的最佳实践

syntax = "proto3";

package arkinfra.v1;

option go_package = ".;v1";

service InfraService {
    // 初始化基建方法，用于新玩家初始化基建
    rpc CreateInfra(User) returns (CreateInfraReply);

    // 首页获取基建产出数目、问题数目
    rpc GetInfo(User) returns (GetInfoReply);

    // 基建详情
    rpc GetDetail(User) returns (GetDetailReply);

    // 单个房间详情
    rpc GetRoomDetail(RoomReq) returns (Room);

    // 获取物品
    rpc GetProduction(GetProductionReq) returns (GetProductionReply);

    // 升级建筑
    rpc UpdateRoom(RoomReq) returns (UpdateRoomReply);

    // 更改生产物品
    rpc ChangeProduction(ChangeProductionReq) returns (Production);

    // 更改工作人员
    rpc ChangeWorker(ChangeWorkerReq) returns (ChangeWorkerReply);
}

// 一般来讲应该是调用user服务的pb文件
message User {
    string user_id = 1;
}

message CreateInfraReply {}

// 首页获取基建产出数目、问题数目的返回值
message GetInfoReply {
    int32 product_amount = 1;
    int32 error_amount = 2;
}

// 房间详细信息
message Room {
    int32 room_id = 1;
    int32 room_type = 2;
    int32 room_level = 3;

    repeated string character_id = 4;
    repeated int32 character_ftg = 5;
    repeated int32 room_bonus = 6;

    int32 storage = 7;
    int32 storage_used = 8;

    int32 item_id = 9;
    int32 item_progress = 10;
}

// 每个房间的详细信息
message GetDetailReply {
    repeated Room rooms = 1;
}

// 获取单个房间的信息
message RoomReq {
    User user = 1;
    int32 room_id = 2;
}

// 获取物品
message GetProductionReq {
    User user = 1;
    repeated int32 room_id = 2;
}

message GetProductionReply {
    repeated Production productions = 1;
}

message Production {
    int32 item_id = 1;
    int32 item_amount = 2;
}

// 升级房间
message UpdateRoomReply {}

// 更改生产物品
message ChangeProductionReq {
    RoomReq room = 1;
    int32 item_id = 2;
    int32 item_amount = 3;
}

message ChangeWorkerReq {
    RoomReq room = 1;
    repeated int32 character_id = 2;
}

message ChangeWorkerReply {}